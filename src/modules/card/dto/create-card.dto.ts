import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import {
  CardDifficulty,
  ContentStatus,
  ContentType,
  LanguageLevel,
  PartOfSpeech,
  VerbType,
} from '@prisma/client';
import { IsBoolean, IsEnum, IsOptional, IsString } from 'class-validator';

/**
 * DTO –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ —Ñ—Ä–∞–∑–∞–º–∏.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞: —Ç–µ–∫—Å—Ç, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∞—É–¥–∏–æ.
 * –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏ Card –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏.
 *
 * @example
 * ```typescript
 * // –ü–æ–ª–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏
 * // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –ø–æ–ª—è (–±–µ–∑ ! –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è):
 * // - term: string
 *
 * // –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ø–æ–ª—è (–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ):
 * const createCardDto: CreateCardDto = {
 *   // üî¥ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ï - —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è
 *   term: 'house',
 *   translate: '–¥–æ–º', // –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫
 *   definition: '<p>A building for human habitation</p>', // –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
 *
 *   // üü° –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï - –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
 *   languageId: 'clx1234567890abcdef',        // ID —è–∑—ã–∫–∞
 *   partOfSpeech: PartOfSpeech.NOUN,          // —á–∞—Å—Ç—å —Ä–µ—á–∏
 *   transcription: 'ha äs',                    // —Ñ–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è
 *
 *   // üü° –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï - –º–µ–¥–∏–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
 *   imageUrl: 'https://example.com/house.jpg', // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 *   audioUrl: 'https://example.com/house.mp3', // URL –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞
 *
 *   // üü° –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
 *   isGlobal: true,                           // –≥–ª–æ–±–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é true)
 *   grammaticalGender: 'NEUTER',              // –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–æ–¥ (–¥–ª—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ)
 *   difficulty: CardDifficulty.EASY,          // —Å–ª–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏
 *   contentType: ContentType.LANGUAGE,        // —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 *   contentStatus: ContentStatus.DRAFT,       // —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é DRAFT)
 *   level: LanguageLevel.A1,                  // —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (A1-C2)
 *
 *   // üü° –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï - —Å–≤—è–∑–∏ —Å –¥—Ä—É–≥–∏–º–∏ –º–æ–¥–µ–ª—è–º–∏
 *   ruleId: 'clx1234567890abcdef',            // ID –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞
 *   verbType: VerbType.REGULAR,               // —Ç–∏–ø –≥–ª–∞–≥–æ–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è VERB)
 *   irregularVerbId: 'clx1234567890abcdef',   // ID –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞
 *
 *   // üü° –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï - –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
 *   sourceProvider: 'dictionary-api',         // –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞
 *   sourceId: 'house'                         // ID –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ –¥–∞–Ω–Ω—ã—Ö
 * };
 * ```
 */
export class CreateCardDto {
  // TERM FIELD
  @ApiProperty({
    description: '–°–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è',
    example: 'hello',
  })
  @IsString()
  term!: string;

  // TRANSLATE FIELD
  @ApiPropertyOptional({
    description: '–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ—Ä–º–∏–Ω–∞ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)',
    example: '–ø—Ä–∏–≤–µ—Ç',
  })
  @IsOptional()
  @IsString()
  translate?: string;

  // DEFINITION FIELD
  @ApiPropertyOptional({
    description: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ (HTML –∏–∑ WYSIWYG —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞)',
    example: '<p>A greeting used when meeting someone</p>',
  })
  @IsOptional()
  @IsString()
  definition?: string;

  // LANGUAGE ID FIELD
  @ApiPropertyOptional({
    description: 'ID —è–∑—ã–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏',
    example: 'clx1234567890abcdef',
  })
  @IsOptional()
  @IsString()
  languageId?: string;

  // PART OF SPEECH FIELD
  @ApiPropertyOptional({
    description: '–ß–∞—Å—Ç—å —Ä–µ—á–∏',
    enum: PartOfSpeech,
    example: PartOfSpeech.NOUN,
  })
  @IsOptional()
  @IsEnum(PartOfSpeech)
  partOfSpeech?: PartOfSpeech;

  // TRANSCRIPTION FIELD
  @ApiPropertyOptional({
    description:
      '–§–æ–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–µ–Ω–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–ª–æ–≤). –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±—ã—á–Ω—ã–µ —Å–ª–æ–≤–∞, —Å–æ—Å—Ç–∞–≤–Ω—ã–µ —Å–ª–æ–≤–∞ —Å –¥–µ—Ñ–∏—Å–æ–º, —Å–ª–æ–≤–∞ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–æ–º –∏ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è.',
    example: 'h…ôÀàlo ä',
  })
  @IsOptional()
  @IsString()
  transcription?: string;

  // IMAGE URL FIELD
  @ApiPropertyOptional({
    description: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏',
    example: 'https://example.com/image.jpg',
  })
  @IsOptional()
  @IsString()
  imageUrl?: string;

  // AUDIO URL FIELD
  @ApiPropertyOptional({
    description: 'URL –∞—É–¥–∏–æ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º',
    example: 'https://example.com/audio.mp3',
  })
  @IsOptional()
  @IsString()
  audioUrl?: string;

  // IS GLOBAL FIELD
  @ApiPropertyOptional({
    description: '–ì–ª–æ–±–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ (–¥–æ—Å—Ç—É–ø–Ω–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)',
    default: true,
  })
  @IsOptional()
  @IsBoolean()
  isGlobal?: boolean;

  // GRAMMATICAL GENDER FIELD
  @ApiPropertyOptional({
    description:
      '–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–æ–¥ (–¥–ª—è –Ω–µ–º–µ—Ü–∫–æ–≥–æ: MASCULINE, FEMININE, NEUTER)',
    example: 'MASCULINE',
  })
  @IsOptional()
  @IsString()
  grammaticalGender?: string;

  // DIFFICULTY FIELD
  @ApiPropertyOptional({
    description: '–°–ª–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏',
    enum: CardDifficulty,
    example: CardDifficulty.EASY,
  })
  @IsOptional()
  @IsEnum(CardDifficulty)
  difficulty?: CardDifficulty;

  // CONTENT TYPE FIELD
  @ApiPropertyOptional({
    description: '–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏',
    enum: ContentType,
    example: ContentType.LANGUAGE,
  })
  @IsOptional()
  @IsEnum(ContentType)
  contentType?: ContentType;

  @ApiPropertyOptional({
    description: '–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏',
    enum: ContentStatus,
    example: ContentStatus.DRAFT,
  })
  @IsOptional()
  @IsEnum(ContentStatus)
  contentStatus?: ContentStatus;

  @ApiPropertyOptional({
    description: '–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (A1, A2, B1, B2, C1, C2)',
    enum: LanguageLevel,
    example: LanguageLevel.A1,
  })
  @IsOptional()
  @IsEnum(LanguageLevel)
  level?: LanguageLevel;

  @ApiPropertyOptional({
    description: 'ID –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞',
    example: 'clx1234567890abcdef',
  })
  @IsOptional()
  @IsString()
  ruleId?: string;

  @ApiPropertyOptional({
    description: '–¢–∏–ø –≥–ª–∞–≥–æ–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è partOfSpeech = VERB)',
    enum: VerbType,
    example: VerbType.REGULAR,
  })
  @IsOptional()
  @IsEnum(VerbType)
  verbType?: VerbType;

  @ApiPropertyOptional({
    description: 'ID –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞',
    example: 'clx1234567890abcdef',
  })
  @IsOptional()
  @IsString()
  irregularVerbId?: string;

  @ApiPropertyOptional({
    description: '–ü—Ä–æ–≤–∞–π–¥–µ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö',
    example: 'dictionary-api',
  })
  @IsOptional()
  @IsString()
  sourceProvider?: string;

  @ApiPropertyOptional({
    description: 'ID –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–µ –¥–∞–Ω–Ω—ã—Ö',
    example: 'hello',
  })
  @IsOptional()
  @IsString()
  sourceId?: string;
}
